# Title: Merge data for stage 1
# Description: This script merges the data from stage 1 of the analysis - drought index (1 year, 3 year, 5 year), mortality, and unemployment
# Inputs: 
    # - Mortality data ('../data/mortality/mortality_cleaned.csv'); 
    # - Unempolyment data ('../data/unemployment/unemploymentClean.csv') ;
    # - Drought index:
    #  - 5-year drought index ('../data/drought_monitor/drought_indicator_5year_matrics_reformat.csv');
    #  - 3-year drought index ('../data/drought_monitor/drought_indicator_3year_matrics_reformat.csv'); 
    #  - 1-year dourght index ('../data/drought_monitor/drought_indicator_1year_matrics_reformat.csv').
# Outputs: A combined csv for data between 2004 and 2014 used in stage 1.
# Author: Yang Ju (yangju90@berkeley.edu)
# Date: 04/18/2016
# Modified:
    # 04/26/2016 (Ian Bolliger, bolliger@berkeley.edu): converted notebook to .py script

import pandas as pd
import argparse

def main(f_mort, f_dm, f_unemp, f_yield, f_lookup, f_out):
    mortality = pd.read_csv(f_mort)
    drought_1year = pd.read_csv(f_dm[0])
    drought_3year = pd.read_csv(f_dm[1])
    drought_5year = pd.read_csv(f_dm[2])
    unempolyment = pd.read_csv(f_unemp)
    lookup_table = pd.read_csv(f_lookup)
    
    final = mortality.merge(drought_3year, left_on=['GISJOIN','year'], right_on=['GISJOIN','year'], how='inner')
    final = final.merge(drought_5year, left_on=['GISJOIN','year'], right_on=['GISJOIN','year'], how='inner')
    final = final.merge(drought_1year, left_on=['GISJOIN','year'], right_on=['GISJOIN','year'], how='inner')
    final = final.merge(lookup_table,on = 'GISJOIN',how = 'inner')
    final = final.merge(unempolyment, left_on = ['STATEFP10','COUNTYFP10','year'],right_on = ['state_FIPS','county_FIPS','year'],how ='inner')
    final = final.drop(['LAUS_CODE','state_FIPS','county_FIPS','NAMELSAD10'],axis = 1)
    
    yeild = pd.read_csv(f_yield)
    yeild = yeild.fillna(0)
    
    final = final.merge(yeild,left_on = ['STATEFP10','COUNTYFP10','year'],right_on = ['STATEFP10','COUNTYFP10','year'],how = 'inner')
    final = final.drop(['period','geolevel','state','county','domain'],axis = 1)
    
    final.to_csv(f_out)

if __name__=='__main__':
    parser = argparse.ArgumentParser(description='Merge data sources for stage 1 regression.')
    parser.add_argument('out')
    parser.add_argument('--mort')
    parser.add_argument('--dm',type=list)
    parser.add_argument('--unemp')
    parser.add_argument('--yield',dest='fyield')
    parser.add_argument('--lookup')
    parser.add_argument('--mort')
    
    args=parser.parse_args()
    main(args.mort, args.dm, args.unemp, args.fyield, args.lookup, args.out)
    